name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          
  test-installation:
    needs: publish-pypi
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Wait for PyPI to update
        run: sleep 60  # Give PyPI time to process the new package
        shell: bash
        
      - name: Install pipx
        run: |
          python -m pip install --upgrade pip
          pip install pipx
          pipx ensurepath
          
      - name: Test installation from PyPI
        run: |
          pipx run k8s-multicluster-mcp --help || echo "Package might not be available yet"
        shell: bash
        
      - name: Report installation status
        if: always()
        run: |
          echo "Installation test completed on ${{ matrix.os }}"
          echo "Package: k8s-multicluster-mcp"
          echo "Version: ${{ github.event.release.tag_name }}" 